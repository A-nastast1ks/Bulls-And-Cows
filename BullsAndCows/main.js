const start = () => {
    alert("–ò–≥—Ä–æ–∫ –≤—ã–±–∏—Ä–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–∏—Ñ—Ä –≤ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–º —á–∏—Å–ª–µ. –ö–æ–º–ø—å—é—Ç–µ—Ä –∑–∞–¥—É–º—ã–≤–∞–µ—Ç —á–∏—Å–ª–æ –∏–∑ 0,1,2,...9 —Ä–∞–∑–º–µ—Ä–æ–º, —É–∫–∞–∑–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º. –ò–≥—Ä–æ–∫ –¥–µ–ª–∞–µ—Ç —Ö–æ–¥—ã, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —ç—Ç–∏ —Ü–∏—Ñ—Ä—ã –∏ –∏—Ö –ø–æ—Ä—è–¥–æ–∫. 0 –º–æ–∂–µ—Ç —Å—Ç–æ—è—Ç—å –Ω–∞ –ø–µ—Ä–≤–æ–º –º–µ—Å—Ç–µ. –í –æ—Ç–≤–µ—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —á–∏—Å–ª–æ –æ—Ç–≥–∞–¥–∞–Ω–Ω—ã—Ö —Ü–∏—Ñ—Ä, —Å—Ç–æ—è—â–∏—Ö –Ω–∞ —Å–≤–æ–∏—Ö –º–µ—Å—Ç–∞—Ö (—á–∏—Å–ª–æ –±—ã–∫–æ–≤) –∏ —á–∏—Å–ª–æ –æ—Ç–≥–∞–¥–∞–Ω–Ω—ã—Ö —Ü–∏—Ñ—Ä, —Å—Ç–æ—è—â–∏—Ö –Ω–µ –Ω–∞ —Å–≤–æ–∏—Ö –º–µ—Å—Ç–∞—Ö (—á–∏—Å–ª–æ –∫–æ—Ä–æ–≤)");
    const numberOfDigits = +prompt("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–≥–∞–¥—ã–≤–∞–µ–º—ã—Ö —Ü–∏—Ñ—Ä –≤ —á–∏—Å–ª–µ");
    if (
        Number.isNaN(numberOfDigits) ||
     numberOfDigits < 2 ||
     numberOfDigits > 9
     ) {
    alert("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 2 –¥–æ 9 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ");
 start();
 return;
}
 alert("–ù–∞—á–Ω–µ–º –∏–≥—Ä—É! :)");

 let answer = [];

const digits = [0,1,2,3,4,5,6,7,8,9];

for(let i=0; i< numberOfDigits; i++) 
{
    const number = digits.splice(-getRandomIndex(), 1)[0];

    /* splice -- —Ñ—É–Ω–∫—Ü–∏—è(–º–µ—Ç–æ–¥ –º–∞—Å—Å–∏–≤–∞) –≤—ã—Ä–µ–∑–∞–µ—Ç –∏–∑ –º–∞—Å—Å–∏–≤–∞ –∫—É—Å–æ—á–µ–∫(–∑–∞–¥–∞—ë–º —Ä–∞–∑–º–µ—Ä) –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ, –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É—è –º–∞—Å—Å–∏–≤ 

    –ü—Ä–∏ -getRandomIndex() –ø—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –º–∞—Å—Å–∏–≤—É —Å –∫–æ–Ω—Ü–∞, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø—É—Å—Ç–æ—Ç—ã –≤ –æ—Ç–≤–µ—Ç–µ, 
    –µ—Å–ª–∏ –±—ã –∏–Ω–¥–µ–∫—Å –±—ã–ª –±–æ–ª—å—à–µ –¥–ª–∏–Ω—ã –º–∞—Å—Å–∏–≤–∞ 
    */
   answer.push(number);
}

const input = document.getElementById("guess");
const btn = document.getElementById("guess-btn");
const table = document.getElementById("history");
const score = document.getElementById("score");
const high_score = document.getElementById("highScore");

let history = [];

const highScore = localStorage.getItem("highScore");

if(highScore) {
high_score.innerText = highScore;
}

let currentScore = 1000 * numberOfDigits;

score.innerText = currentScore;

btn.addEventListener("click", () => {
    if(+input.value.length === +numberOfDigits && 
        input.value.match(/\d/) &&
        checkUnique(+input.value)) {
        const tr = document.createElement("tr");
        const td1 = document.createElement("td");
        const td2 = document.createElement("td");
    const [cows, bulls] =  checkNumbersAlgorithm(answer, [...input.value]); 
    // ... - –æ–ø–µ—Ä–∞—Ç–æ—Ä spread. –ï—Å–ª–∏ –º—ã —Ö–æ—Ç–∏–º –ø–æ–ª—É—á–∏—Ç—å –∏ –ø–æ—Å–ª–µ–¥—É—é—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –º–∞—Å—Å–∏–≤–∞,
    // –Ω–æ –Ω–µ —É–≤–µ—Ä–µ–Ω—ã –≤ –∏—Ö —á–∏—Å–ª–µ, —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –µ—â—ë –æ–¥–∏–Ω "–ø–∞—Ä–∞–º–µ—Ç—Ä", –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—É—á–∏—Ç –≤—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ —Å –ø–æ–º–æ—â—å—é spread
    
    if(!history.includes(input.value)) {
        if(currentScore > 10*history.length) {
        currentScore = currentScore - 10*history.length;
    }

    score.innerText = currentScore;
        
        history.push(input.value);
    
        td1.innerText = input.value;
        td2.innerText = `${cows} üêÑ ${bulls} üêÆ`; // ` - –æ–±—Ä–∞—Ç–Ω–∞—è –º–µ—Ç–∫–∞
        tr.appendChild(td1);
        tr.appendChild(td2);
        // –°–æ–∑–¥–∞–ª–∏ —Å—Ç—Ä–æ–∫—É, —Å–æ–∑–¥–∞–ª–∏ —è—á–µ–π–∫—É, –≤ —è—á–µ–π–∫—É –≤–ø–∏—Ö–Ω—É–ª–∏ value, —ç—Ç—É —è—á–µ–π–∫—É –∑–∞–ø–∏—Ö–Ω—É–ª–∏ –≤ tr
        table.appendChild(tr);

        input.value = "";

    } 
    else {
        alert("–≠—Ç–æ —á–∏—Å–ª–æ —É–∂–µ –±—ã–ª–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ. –í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞");
    }
}
else {
    alert(`–ù–∞–ø–∏—à–∏—Ç–µ —á–∏—Å–ª–æ –∏–∑ ${numberOfDigits} –Ω–µ–ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —á–∏—Å–µ–ª!`);
}
    });   
};

const getRandomIndex = () => {
    return +Math.random().toFixed(1) * 10;
};

const checkUnique = (number) => {
    let arr = `${number}`.split("");
    // –ú–µ—Ç–æ–¥ split() –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∫ —Å—Ç—Ä–æ–∫–µ –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–∑–¥–µ–ª–∏—Ç—å –µ–µ –Ω–∞ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ 
    // –Ω–∞ –æ—Å–Ω–æ–≤–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è. –†–µ–∑—É–ª—å—Ç–∞—Ç - –º–∞—Å—Å–∏–≤ –∏–∑ —ç—Ç–∏—Ö –ø–æ–¥—Å—Ç—Ä–æ–∫
    let uniqueSet = [];
    for (let i = 0; i < arr.length; i++) {
            if(uniqueSet.includes(arr[i])) {
             return false;
            }
            uniqueSet.push(arr[i]);
    }
    return true;
};

const checkNumbersAlgorithm = (answer, guess) => {
    let bulls = 0;
    let cows = 0;

    for(let i = 0; i < answer.length; i++) {
      if (+answer[i] === +guess[i]) { 
        // == –Ω–µ –æ—Ç–ª–∏—á–∞–µ—Ç 0 –æ—Ç false –∏ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –æ—Ç false, 
        // –ø–æ—ç—Ç–æ–º—É –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç—Ä–æ–≥–æ–µ —Ä–∞–≤–Ω–æ === (–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –±–µ–∑ –ø—Ä–∏–≤–µ–¥–µ–Ω–∏—è —Ç–∏–ø–æ–≤)
        bulls++;
        continue;
      }
      if (answer.includes(+guess[i])) {
        cows++;
      }
    }

    if(bulls === answer.length) {
        const score = document.getElementById("score");
       localStorage.setItem("highScore", +score.innerText);
        alert("–¢—ã –ø–æ–±–µ–¥–∏–ª! –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! :)");
        location.reload();
    }

    return[cows, bulls];
}

start();
